# frozen_string_literal: true

# Represents the 'https://aaf.edu.au/attributes' claim generated by Rapid
# Connect for research services.
class AttributesClaim
  attr_reader :attributes

  def initialize(iss, aud, subject)
    @attributes = {
      cn: subject[:cn], displayname: subject[:display_name],
      surname: subject[:surname], givenname: subject[:given_name],
      mail: subject[:mail], o: subject[:organization],
      auedupersonsharedtoken: subject[:shared_token],
      edupersonorcid: subject[:orcid],
      edupersonscopedaffiliation: subject[:scoped_affiliation],
      edupersonprincipalname: subject[:principal_name],
      edupersontargetedid: retarget_id(iss, aud, subject[:principal])
    }
  end

  private

  def retarget_id(iss, aud, principal)
    stored_id(principal, aud) || begin
      _idp_eid, _rapid_connect_sp_eid, opaque = principal.split('!')
      new_opaque = OpenSSL::Digest.base64digest('SHA1', "#{opaque} #{aud}")
      "#{iss}!#{aud}!#{new_opaque}"
    end
  end

  def stored_id(principal, aud)
    anonymized_principal = OpenSSL::Digest::SHA256.hexdigest(principal)
    Redis.new.get("eptid:#{aud}:#{anonymized_principal}")
  end
end
